# https://www.robotstxt.org/robotstxt.html
User-agent: *
Disallow:

function findMostRepeatedWord(str) {
    const regex = /(?:(the|a|an|to|i|for|by|it|however|more|with|you|when|now|has|also|if|it,|in|and|my|that|how|have|off|it|wait|is|upon|up|get|not|was|off|be|any|but|an|from|just|) +)/g; 
    const str1 = str.toLowerCase()
    let strFormatter = str1.replace(regex, ' ')
    let stringFormatter = strFormatter.replace(/[0-9]/g, '');
  let words = stringFormatter.split(/\s+(?:)\s+/);
  //console.log(words); // [ 'How', 'do', 'you', 'do' ]

  let occurances = {};

 app
 // console.log(occurances); // { How: 1, do: 2, you: 1 }

 // let max = 0;
    let mostRepeatedWord = [];

  for (let word of words) {
    if (occurances[word] > 1) {
  //    max = occurances[word];
       occurances[word] = 1
       mostRepeatedWord.push(word)
    }
  } 
  
  return mostRepeatedWord;
}





   <PayPalScriptProvider options={{ "client-id": "AS6sVCA_eGz2AlxPZq45TPIyWe8utd0xROs0xpHFD0ycQzjm-mKh_DEc5Njl0_h4FOKrBfkA0nRO9xj7" }}>
            <PayPalButtons
             createOrder={(data, actions) => {
               return actions.order.create({
                 purchase_units: [
                   {
                     amount: {
                       value: "12.99",
                      }
                    }
                  ]
                });
              }}
              onApprove={(data, actions) => {
                return actions.order.capture().then((details) => {
                  const name = details.payer.name.given_name;
                  alert(`Transaction completed by ${name}`);
                });
              }}
              />
        </PayPalScriptProvider>
